"""Base

Revision ID: 248b40b865cd
Revises: 
Create Date: 2025-06-13 16:56:12.517657

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '248b40b865cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('preview_url', sa.String(), nullable=True),
    sa.Column('sample_url', sa.String(), nullable=True),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('rating', sa.Enum('EXPLICIT', 'QUESTIONABLE', name='ratingtype'), nullable=False),
    sa.Column('type', sa.Enum('IMAGE', 'VIDEO', name='filetype'), nullable=False),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('top_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('top_vaults', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.Column('saves', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=512), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('week_score', sa.Float(), nullable=False),
    sa.Column('month_score', sa.Float(), nullable=False),
    sa.Column('year_score', sa.Float(), nullable=False),
    sa.Column('trend_score', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_id'), 'post', ['id'], unique=False)
    op.create_index(op.f('ix_post_month_score'), 'post', ['month_score'], unique=False)
    op.create_index(op.f('ix_post_score'), 'post', ['score'], unique=False)
    op.create_index(op.f('ix_post_source_id'), 'post', ['source_id'], unique=False)
    op.create_index(op.f('ix_post_trend_score'), 'post', ['trend_score'], unique=False)
    op.create_index(op.f('ix_post_week_score'), 'post', ['week_score'], unique=False)
    op.create_index(op.f('ix_post_year_score'), 'post', ['year_score'], unique=False)
    op.create_table('reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_type', sa.Enum('POST', 'COMMENT', 'VAULT', name='targettype'), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('LIKE', 'DISLIKE', 'NONE', name='reactiontype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_date_created_type_id', 'reaction', ['date_created', 'target_type', 'target_id'], unique=False)
    op.create_index(op.f('ix_reaction_id'), 'reaction', ['id'], unique=False)
    op.create_index('ix_user_type_id', 'reaction', ['user_id', 'target_type', 'target_id'], unique=False)
    op.create_table('search',
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('week_score', sa.Integer(), nullable=False),
    sa.Column('month_score', sa.Integer(), nullable=False),
    sa.Column('year_score', sa.Integer(), nullable=False),
    sa.Column('trend_score', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('query')
    )
    op.create_index(op.f('ix_search_month_score'), 'search', ['month_score'], unique=False)
    op.create_index(op.f('ix_search_query'), 'search', ['query'], unique=True)
    op.create_index(op.f('ix_search_score'), 'search', ['score'], unique=False)
    op.create_index(op.f('ix_search_trend_score'), 'search', ['trend_score'], unique=False)
    op.create_index(op.f('ix_search_week_score'), 'search', ['week_score'], unique=False)
    op.create_index(op.f('ix_search_year_score'), 'search', ['year_score'], unique=False)
    op.create_table('search_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_metric_id'), 'search_metric', ['id'], unique=False)
    op.create_index(op.f('ix_search_metric_query'), 'search_metric', ['query'], unique=False)
    op.create_index('ix_search_query_date_created', 'search_metric', ['query', 'date_created'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_id'), 'comment', ['id'], unique=False)
    op.create_table('post_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('trend_score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_post_id_date_created', 'post_metric', ['post_id', 'date_created'], unique=False)
    op.create_index(op.f('ix_post_metric_id'), 'post_metric', ['id'], unique=False)
    op.create_table('vault',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('previews', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('post_count', sa.Integer(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.Column('layout', sa.Enum('MASONRY', 'GRID', name='layouttype'), nullable=False),
    sa.Column('privacy', sa.Enum('PRIVATE', 'PUBLIC', name='privacytype'), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('week_score', sa.Float(), nullable=False),
    sa.Column('month_score', sa.Float(), nullable=False),
    sa.Column('year_score', sa.Float(), nullable=False),
    sa.Column('trend_score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vault_id'), 'vault', ['id'], unique=False)
    op.create_index(op.f('ix_vault_month_score'), 'vault', ['month_score'], unique=False)
    op.create_index(op.f('ix_vault_score'), 'vault', ['score'], unique=False)
    op.create_index(op.f('ix_vault_trend_score'), 'vault', ['trend_score'], unique=False)
    op.create_index(op.f('ix_vault_week_score'), 'vault', ['week_score'], unique=False)
    op.create_index(op.f('ix_vault_year_score'), 'vault', ['year_score'], unique=False)
    op.create_table('vault_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('vault_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['vault_id'], ['vault.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_vault_id_date_created', 'vault_metric', ['vault_id', 'date_created'], unique=False)
    op.create_index(op.f('ix_vault_metric_id'), 'vault_metric', ['id'], unique=False)
    op.create_table('vault_post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('vault_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['vault_id'], ['vault.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_vault_post', 'vault_post', ['post_id', 'vault_id'], unique=False)
    op.create_index(op.f('ix_vault_post_id'), 'vault_post', ['id'], unique=False)
    op.create_index(op.f('ix_vault_post_vault_id'), 'vault_post', ['vault_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vault_post_vault_id'), table_name='vault_post')
    op.drop_index(op.f('ix_vault_post_id'), table_name='vault_post')
    op.drop_index('ix_vault_post', table_name='vault_post')
    op.drop_table('vault_post')
    op.drop_index(op.f('ix_vault_metric_id'), table_name='vault_metric')
    op.drop_index('ix_vault_id_date_created', table_name='vault_metric')
    op.drop_table('vault_metric')
    op.drop_index(op.f('ix_vault_year_score'), table_name='vault')
    op.drop_index(op.f('ix_vault_week_score'), table_name='vault')
    op.drop_index(op.f('ix_vault_trend_score'), table_name='vault')
    op.drop_index(op.f('ix_vault_score'), table_name='vault')
    op.drop_index(op.f('ix_vault_month_score'), table_name='vault')
    op.drop_index(op.f('ix_vault_id'), table_name='vault')
    op.drop_table('vault')
    op.drop_index(op.f('ix_post_metric_id'), table_name='post_metric')
    op.drop_index('ix_post_id_date_created', table_name='post_metric')
    op.drop_table('post_metric')
    op.drop_index(op.f('ix_comment_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index('ix_search_query_date_created', table_name='search_metric')
    op.drop_index(op.f('ix_search_metric_query'), table_name='search_metric')
    op.drop_index(op.f('ix_search_metric_id'), table_name='search_metric')
    op.drop_table('search_metric')
    op.drop_index(op.f('ix_search_year_score'), table_name='search')
    op.drop_index(op.f('ix_search_week_score'), table_name='search')
    op.drop_index(op.f('ix_search_trend_score'), table_name='search')
    op.drop_index(op.f('ix_search_score'), table_name='search')
    op.drop_index(op.f('ix_search_query'), table_name='search')
    op.drop_index(op.f('ix_search_month_score'), table_name='search')
    op.drop_table('search')
    op.drop_index('ix_user_type_id', table_name='reaction')
    op.drop_index(op.f('ix_reaction_id'), table_name='reaction')
    op.drop_index('ix_date_created_type_id', table_name='reaction')
    op.drop_table('reaction')
    op.drop_index(op.f('ix_post_year_score'), table_name='post')
    op.drop_index(op.f('ix_post_week_score'), table_name='post')
    op.drop_index(op.f('ix_post_trend_score'), table_name='post')
    op.drop_index(op.f('ix_post_source_id'), table_name='post')
    op.drop_index(op.f('ix_post_score'), table_name='post')
    op.drop_index(op.f('ix_post_month_score'), table_name='post')
    op.drop_index(op.f('ix_post_id'), table_name='post')
    op.drop_table('post')
    # ### end Alembic commands ###
